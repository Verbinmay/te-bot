import { Markup } from 'telegraf';

// export const myList = '–°–ø–∏—Å–æ–∫ –¥–µ–ª';
// export const editTask = '–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å';
// export const deleteTask = '–£–¥–∞–ª–∏—Ç—å';
// export const doneTask = '–í—ã–ø–æ–ª–Ω–∏—Ç—å';
export const SA_createQuestion = '–°–æ–∑–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å';
export const SA_adminOpen = '–ê–¥–º–∏–Ω';
export const SA_auth = '–í–≤–µ–¥–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ | ';
export const getTwentyQuestions = '–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 20 –≤–æ–ø—Ä–æ—Å–æ–≤ üßê';
export const startTwentyQuestions = '–ü–æ–≥–Ω–∞–ª–∏ üí™üèª';
export const brakeTwentyQuestions = '–ù–µ –≥–æ—Ç–æ–≤ üèÉüèª';

export function actionButtons() {
  return Markup.keyboard(
    [
      // Markup.button.callback(myList, 'list'),
      // Markup.button.callback(editTask, 'edit'),
      // Markup.button.callback(deleteTask, 'delete'),
      // Markup.button.callback(doneTask, 'done'),
      Markup.button.callback(SA_adminOpen, 'SA_adminOpen'),
      //TODO Markup.button.callback(getTwentyQuestions, 'getTwentyQuestions'),
    ],
    {
      columns: 2,
    },
  );

  //** –¢–∞–∫ –ø–∏—à—É—Ç—Å—è –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ */
  //   return Markup.inlineKeyboard([
  //     Markup.button.callback('–°–ø–∏—Å–æ–∫ –¥–µ–ª', 'list'),
  //     Markup.button.callback('–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', 'edit'),
  //     Markup.button.callback('–£–¥–∞–ª–∏—Ç—å', 'delete'),
  //   ]);
}
export function readyButtons() {
  return Markup.keyboard(
    [
      Markup.button.callback(startTwentyQuestions, 'startTwentyQuestions'),
      Markup.button.callback(brakeTwentyQuestions, 'brakeTwentyQuestions'),
    ],
    {
      columns: 2,
    },
  );
}

export function SA_Buttons() {
  return Markup.keyboard(
    [
      Markup.button.callback(SA_createQuestion, 'SA_createQuestion'),

      // Markup.button.callback(brakeTwentyQuestions, 'brakeTwentyQuestions'),
    ],
    {
      columns: 2,
    },
  );
}
export function SA_Auth() {
  return Markup.inlineKeyboard([
    Markup.button.callback(SA_auth, 'SA_auth'),
    Markup.button.callback('kkkkkkk', 'kkkkkkk'),
  ]);
}

export function answerButtons(a: string, b: string, c: string, d: string) {
  return Markup.inlineKeyboard(
    [
      Markup.button.callback(a, 'a'),
      Markup.button.callback(b, 'b'),
      Markup.button.callback(c, 'c'),
      Markup.button.callback(d, 'd'),
    ],
    {
      columns: 2,
    },
  );
}
